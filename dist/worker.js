(()=>{var t={731:(t,e,s)=>{t.exports=s(297)},297:function(t,e){var s,n,r;(function(){var o,i,a,h,p,u,l,c,y,d,g,f,x,m,k;a=Math.floor,d=Math.min,i=function(t,e){return t<e?-1:t>e?1:0},y=function(t,e,s,n,r){var o;if(null==s&&(s=0),null==r&&(r=i),s<0)throw new Error("lo must be non-negative");for(null==n&&(n=t.length);s<n;)r(e,t[o=a((s+n)/2)])<0?n=o:s=o+1;return[].splice.apply(t,[s,s-s].concat(e)),e},u=function(t,e,s){return null==s&&(s=i),t.push(e),m(t,0,t.length-1,s)},p=function(t,e){var s,n;return null==e&&(e=i),s=t.pop(),t.length?(n=t[0],t[0]=s,k(t,0,e)):n=s,n},c=function(t,e,s){var n;return null==s&&(s=i),n=t[0],t[0]=e,k(t,0,s),n},l=function(t,e,s){var n;return null==s&&(s=i),t.length&&s(t[0],e)<0&&(e=(n=[t[0],e])[0],t[0]=n[1],k(t,0,s)),e},h=function(t,e){var s,n,r,o,h,p;for(null==e&&(e=i),h=[],n=0,r=(o=function(){p=[];for(var e=0,s=a(t.length/2);0<=s?e<s:e>s;0<=s?e++:e--)p.push(e);return p}.apply(this).reverse()).length;n<r;n++)s=o[n],h.push(k(t,s,e));return h},x=function(t,e,s){var n;if(null==s&&(s=i),-1!==(n=t.indexOf(e)))return m(t,0,n,s),k(t,n,s)},g=function(t,e,s){var n,r,o,a,p;if(null==s&&(s=i),!(r=t.slice(0,e)).length)return r;for(h(r,s),o=0,a=(p=t.slice(e)).length;o<a;o++)n=p[o],l(r,n,s);return r.sort(s).reverse()},f=function(t,e,s){var n,r,o,a,u,l,c,g,f;if(null==s&&(s=i),10*e<=t.length){if(!(o=t.slice(0,e).sort(s)).length)return o;for(r=o[o.length-1],a=0,l=(c=t.slice(e)).length;a<l;a++)s(n=c[a],r)<0&&(y(o,n,0,null,s),o.pop(),r=o[o.length-1]);return o}for(h(t,s),f=[],u=0,g=d(e,t.length);0<=g?u<g:u>g;0<=g?++u:--u)f.push(p(t,s));return f},m=function(t,e,s,n){var r,o,a;for(null==n&&(n=i),r=t[s];s>e&&n(r,o=t[a=s-1>>1])<0;)t[s]=o,s=a;return t[s]=r},k=function(t,e,s){var n,r,o,a,h;for(null==s&&(s=i),r=t.length,h=e,o=t[e],n=2*e+1;n<r;)(a=n+1)<r&&!(s(t[n],t[a])<0)&&(n=a),t[e]=t[n],n=2*(e=n)+1;return t[e]=o,m(t,h,e,s)},o=function(){function t(t){this.cmp=null!=t?t:i,this.nodes=[]}return t.push=u,t.pop=p,t.replace=c,t.pushpop=l,t.heapify=h,t.updateItem=x,t.nlargest=g,t.nsmallest=f,t.prototype.push=function(t){return u(this.nodes,t,this.cmp)},t.prototype.pop=function(){return p(this.nodes,this.cmp)},t.prototype.peek=function(){return this.nodes[0]},t.prototype.contains=function(t){return-1!==this.nodes.indexOf(t)},t.prototype.replace=function(t){return c(this.nodes,t,this.cmp)},t.prototype.pushpop=function(t){return l(this.nodes,t,this.cmp)},t.prototype.heapify=function(){return h(this.nodes,this.cmp)},t.prototype.updateItem=function(t){return x(this.nodes,t,this.cmp)},t.prototype.clear=function(){return this.nodes=[]},t.prototype.empty=function(){return 0===this.nodes.length},t.prototype.size=function(){return this.nodes.length},t.prototype.clone=function(){var e;return(e=new t).nodes=this.nodes.slice(0),e},t.prototype.toArray=function(){return this.nodes.slice(0)},t.prototype.insert=t.prototype.push,t.prototype.top=t.prototype.peek,t.prototype.front=t.prototype.peek,t.prototype.has=t.prototype.contains,t.prototype.copy=t.prototype.clone,t}(),n=[],void 0===(r="function"==typeof(s=function(){return o})?s.apply(e,n):s)||(t.exports=r)}).call(this)}},e={};function s(n){var r=e[n];if(void 0!==r)return r.exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,s),o.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";const t=require("worker_threads");var e;!function(t){t.CreateTask="CreateTask",t.CompleteTask="CompleteTask",t.CancelTask="CancelTask",t.AddLayer="AddLayer",t.RemoveLayer="RemoveLayer",t.SetWalkable="SetWalkable",t.SetWeight="SetWeight"}(e||(e={}));const n={R:{x:1,y:0},L:{x:-1,y:0},D:{x:0,y:1},U:{x:0,y:-1}},r={RD:{x:1,y:1},RU:{x:1,y:-1},LU:{x:-1,y:-1},LD:{x:-1,y:1}};var o=s(731),i=s.n(o);class a{position;distance;parent=null;weight;constructor({position:t,weight:e=1,distance:s}){this.position={...t},this.distance=s,this.weight=e}getBetterGuessDistance(){return this.weight+this.distance}getWeight(){return this.weight}setWeight(t){this.weight=t}getParent(){return this.parent}setParent(t){this.parent=t}compute(){const t=[{...this.position}],e=this.parent?this.parent.getWeight():0;let s=this.getParent();for(;s;)t.push({...s.position}),s=s.getParent();return t.reverse(),{path:t,weight:e}}getNextWeight(t,e){const s=this.position.x+t.x,n=this.position.y+t.y,r=e[n]?.[s]??1;return Math.abs(t.x)+Math.abs(t.y)!==1?r*Math.SQRT2+(e[this.position.y]?.[s]??0)+(e[n]?.[this.position.x]??0):r}}class h{from;to;id;layer;tree=[];nodes;complete;constructor({idTask:t,from:e,to:s,layer:n},r){this.id=t,this.from={...e},this.to={...s},this.layer=n,this.complete=r,this.nodes=new(i())(((t,e)=>t.getBetterGuessDistance()-e.getBetterGuessDistance()));const o=new a({position:this.from,distance:this.getDistanceFrom(this.from)});this.pushNode(o)}getDistanceFrom(t){return Math.sqrt((t.x-this.to.x)**2+(t.y-this.to.y)**2)}addNode(t,e,s){const n=new a({position:e,distance:this.getDistanceFrom(e),weight:s});n.setParent(t),this.pushNode(n)}pushNode(t){this.nodes.push(t),this.tree[t.position.y]||(this.tree[t.position.y]=[]),this.tree[t.position.y][t.position.x]=t}pickNode(t){return this.tree[t.y]?.[t.x]}takeLastNode(){return this.nodes.pop()??null}useNode(t,e,s){e.setWeight(s),e.setParent(t),this.nodes.updateItem(e)}getNextWeight(t,e,s){return t.getWeight()+t.getNextWeight(e,s)}}if(!t.parentPort)throw Error("Undefined parent port of pathfinding worker");const p=new class{listeners=new Map;parent;constructor(t){this.parent=t,this.parent.on("message",(t=>{this.listeners.get(t.event)?.(t.payload)}))}on(t,e){this.listeners.set(t,e)}send(t,e){this.parent.postMessage({event:t,payload:e})}}(t.parentPort),u=new class{layers={};weights=[];taskQueue=[];timer;constructor(t=200){this.timer=setInterval((()=>{try{this.next()}catch(t){console.error("Pathfinding process error:",t)}}),t)}destroy(){clearTimeout(this.timer)}createTask(t){this.taskQueue.push(t)}cancelTask(t){const e=this.taskQueue.findIndex((e=>e.id===t));-1!==e&&this.taskQueue.splice(e,1)}addLayer(t,e){this.layers[t]=e}removeLayer(t){this.layers[t]&&delete this.layers[t]}setWeight(t,e){this.weights[t.y]||(this.weights[t.y]=[]),this.weights[t.y][t.x]=e}resetWeight(t){this.weights[t.y]&&delete this.weights[t.y][t.x]}setWalkable(t,e,s){const n=this.layers[t];n&&(n[e.y][e.x]=s)}next(){const t=this.taskQueue[0];if(!t)return;const e=t.takeLastNode();e?e.position.x===t.to.x&&e.position.y===t.to.y?(this.taskQueue.shift(),t.complete(e.compute())):this.getNextDirections(t,e).forEach((s=>{const n={x:e.position.x+s.x,y:e.position.y+s.y},r=t.getNextWeight(e,s,this.weights),o=t.pickNode(n);o?r<o.getWeight()&&t.useNode(e,o,r):t.addNode(e,n,r)})):(this.taskQueue.shift(),t.complete({path:null,weight:1/0})),this.next()}getNextDirections(t,e){const s={},o=[];return Object.entries(n).forEach((([n,r])=>{this.isWalkable(e,t.layer,r)&&(s[n]=!0,o.push(r))})),Object.entries(r).forEach((([n,r])=>{s[n[0]]&&s[n[1]]&&this.isWalkable(e,t.layer,r)&&o.push(r)})),o}isWalkable(t,e,s){const n=t.position.x+s.x,r=t.position.y+s.y;return Boolean(this.layers[e]?.[r]?.[n])}}(t.workerData.rate);p.on(e.CreateTask,(t=>{const s=new h(t,(s=>{p.send(e.CompleteTask,{idTask:t.idTask,result:s})}));u.createTask(s)})),p.on(e.CancelTask,(t=>{u.cancelTask(t.idTask)})),p.on(e.SetWeight,(t=>{null===t.value?u.resetWeight(t.position):u.setWeight(t.position,t.value)})),p.on(e.SetWalkable,(t=>{u.setWalkable(t.layer,t.position,t.state)})),p.on(e.AddLayer,(t=>{u.addLayer(t.layer,t.grid)})),p.on(e.RemoveLayer,(t=>{u.removeLayer(t.layer)}))})(),module.exports={}})();